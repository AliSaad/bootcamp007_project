I am a huge fan of the Xbox and Microsoft has made a lot of money off of me since they made the Xbox One backwards compatible with Xbox 360 games. I have a back catalog of games I've bought through Microsoft's weekly sales that has now put my Steam catalog to shame. My problem is that during these sales, sometimes it's hard to guess which ones may become backwards compatible in the future. Last Friday was the one year anniversary of the backwards compatibility update and I felt compelled to use my skills as a Data Scientist to make something fun, and hopefully useful.
Please take a moment to check it out. It's very much in the alpha stage and I have plenty more I'd like to add which I'll detail further down.

Link

For those interested, I'll briefly explain how I did it.

Microsoft surely takes many factors into account when prioritizing their games, but I needed data to analyze so I could think more like them. I decided to collect data from websites using Scrapy, a free framework that plugs into Python. I first designed a "spider" to grab /u/MajorNelson 's backwards compatibility list off of his blog because I figured it would be quickest to be updated. I then scraped game names, user and professional scores from Metacritic along with several other factoids like release dates in case another site is lacking. I know Microsoft has said in the past that they look at UserVoice votes to help make choices, which I confess I was skeptical of, and grabbed the votes and forum comment counts. Next, I grabbed the names and differentiations of Xbox 360 exclusives (console, regular) and Kinect games (required, supported) from Wikipedia. Remember that this is important because Microsoft says they won't support Kinect required games but games with optional Kinect functionality left me wondering. I pondered if also being on Xbox One in the form of remasters, remakes or cross-platform releases had much of an effect. For reference, I started with the list of Xbox One games off Microsoft's site and I even scraped a GameInformer article that gets regularly updated with the latest remasters. Based off these and further research, I made a list of games that could be found on both platforms. Most importantly, I grabbed the list of all Xbox 360 games and extracted every single piece of information I could find on their pages including publishers, developers, user review scores and their counts, release dates, Smartglass features, demo availability, multiplayer types, sound features, and the number of add-ons, themes, gamerpics and the like. After scraping these 8 sites, I felt ready to start processing the data into one master dataset. What I would still like to gather is the game's engine but I haven't looked to see if there was any consistency between Wikipedia's individual game pages. Additionally. going to each Xbox 360 game's page may give me a more in depth look at other platforms these games are available on, their release countries, updated publishers in case I got a game's current publishing rights wrong and more. I also would like to make sure I got all the remasters and games that required peripherals. I wouldn't be surprised to see some mistakes or missing attributes though I tried hard to avoid it. However, that can be fixed with time and the data is easy to update.

In the near future, I will be looking at a method of machine learning called "clustering" to examine the data. Clustering may be better because XXX. I may also attempt a neural network given the time. As far as the website goes, I intend to set it up to automatically perform update scrape data and machine learning predictions. I also intend to look at scraping sales and provide their predictions to give consumers advice on which Xbox 360 games to buy that week.
